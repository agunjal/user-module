{"ast":null,"code":"var _jsxFileName = \"D:\\\\user-app\\\\client\\\\src\\\\Components\\\\User\\\\Form.js\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { FormGroup, FormControl, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsertForm = props => {\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"You have enter an invalid email address\").required(\"Required\"),\n    rollno: Yup.number().positive(\"Invalid roll number\").integer(\"Invalid roll number\").required(\"Required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Formik, { ...props,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"name\",\n            type: \"text\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            className: \"d-block invalid-feedback\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"email\",\n            type: \"text\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            className: \"d-block invalid-feedback\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"rollno\",\n            type: \"number\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"rollno\",\n            className: \"d-block invalid-feedback\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          size: \"lg\",\n          block: \"block\",\n          type: \"submit\",\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UsertForm;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsertForm\");","map":{"version":3,"sources":["D:/user-app/client/src/Components/User/Form.js"],"names":["React","Yup","Formik","Form","Field","ErrorMessage","FormGroup","FormControl","Button","UsertForm","props","validationSchema","object","shape","name","string","required","email","rollno","number","positive","integer","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,QAA+C,iBAA/C;;;AAEA,MAAMC,SAAS,GAAKC,KAAF,IAAa;AAE7B,QAAMC,gBAAgB,GAAGV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CACrB;AACAC,IAAAA,IAAI,EAAEb,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CADN;AAEAC,IAAAA,KAAK,EAAEhB,GAAG,CAACc,MAAJ,GACJE,KADI,CACE,yCADF,EAEJD,QAFI,CAEK,UAFL,CAFP;AAKAE,IAAAA,MAAM,EAAEjB,GAAG,CAACkB,MAAJ,GACLC,QADK,CACI,qBADJ,EAELC,OAFK,CAEG,qBAFH,EAGLL,QAHK,CAGI,UAHJ;AALR,GADqB,CAAzB;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE,QAAC,MAAD,OAAYN,KAAZ;AAAmB,MAAA,gBAAgB,EAAEC,gBAArC;AAAA,6BACE,QAAC,IAAD;AAAA,gCAEE,QAAC,SAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,MAAxB;AAA+B,YAAA,SAAS,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,QAAC,YAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,0BAFZ;AAGE,YAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAYE,QAAC,SAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAC,MAAzB;AAAgC,YAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,QAAC,YAAD;AACA,YAAA,IAAI,EAAC,OADL;AAEA,YAAA,SAAS,EAAC,0BAFV;AAGA,YAAA,SAAS,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAsBE,QAAC,SAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,IAAI,EAAC,QAA1B;AAAmC,YAAA,SAAS,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,QAAC,YAAD;AACA,YAAA,IAAI,EAAC,QADL;AAEA,YAAA,SAAS,EAAC,0BAFV;AAGA,YAAA,SAAS,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAgCE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,IAAI,EAAC,IAA9B;AAAmC,UAAA,KAAK,EAAC,OAAzC;AAAiD,UAAA,IAAI,EAAC,QAAtD;AAAA,oBACGD,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,gBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CAzDD;;KAAMb,S;AA2DN,eAAeN,IAAf","sourcesContent":["import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { FormGroup, FormControl, Button } from \"react-bootstrap\";\r\n\r\nconst UsertForm = ( props ) => {\r\n\r\n  const validationSchema = Yup.object().shape(\r\n      {\r\n      name: Yup.string().required(\"Required\"),\r\n      email: Yup.string()\r\n        .email(\"You have enter an invalid email address\")\r\n        .required(\"Required\"),\r\n      rollno: Yup.number()\r\n        .positive(\"Invalid roll number\")\r\n        .integer(\"Invalid roll number\")\r\n        .required(\"Required\"),\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <Formik {...props} validationSchema={validationSchema}>\r\n        <Form>\r\n          \r\n          <FormGroup>\r\n            <Field name=\"name\" type=\"text\" className=\"form-control\" />\r\n\r\n            <ErrorMessage\r\n              name=\"name\"\r\n              className=\"d-block invalid-feedback\"\r\n              component=\"span\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Field name=\"email\" type=\"text\" className=\"form-control\" />\r\n            \r\n            <ErrorMessage\r\n            name=\"email\"\r\n            className=\"d-block invalid-feedback\"\r\n            component=\"span\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Field name=\"rollno\" type=\"number\" className=\"form-control\" />\r\n            \r\n            <ErrorMessage\r\n            name=\"rollno\"\r\n            className=\"d-block invalid-feedback\"\r\n            component=\"span\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\">\r\n            {props.children}\r\n          </Button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}